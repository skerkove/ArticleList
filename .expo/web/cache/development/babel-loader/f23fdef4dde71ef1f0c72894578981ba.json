{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/Users/scottkerkove/Desktop/Apolis/React/NavDemo/src/screens/ToDo.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function () { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component, useState } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport myData from \"../data/toDo_list.json\";\n\nvar ToDoListItem = function (_Component) {\n  _inherits(ToDoListItem, _Component);\n\n  var _super = _createSuper(ToDoListItem);\n\n  function ToDoListItem() {\n    _classCallCheck(this, ToDoListItem);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(ToDoListItem, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(View, {\n        style: styles.listRow,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 12,\n          columnNumber: 7\n        }\n      }, React.createElement(View, {\n        style: {\n          flex: 1\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 13,\n          columnNumber: 7\n        }\n      }, React.createElement(Text, {\n        style: {\n          fontWeight: 'bold',\n          marginLeft: 5\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 14,\n          columnNumber: 9\n        }\n      }, this.props.item.taskText), React.createElement(Text, {\n        style: {\n          flexShrink: 1,\n          flexWrap: 'wrap',\n          margin: 5,\n          fontSize: 10\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 9\n        }\n      }, this.props.item.createdAt)));\n    }\n  }]);\n\n  return ToDoListItem;\n}(Component);\n\nvar ToDo = function (_Component2) {\n  _inherits(ToDo, _Component2);\n\n  var _super2 = _createSuper(ToDo);\n\n  function ToDo(props) {\n    var _this;\n\n    _classCallCheck(this, ToDo);\n\n    _this = _super2.call(this, props);\n\n    _this.generateKey = function (numberOfCharacters) {\n      return require('random-string')({\n        length: numberOfCharacters\n      });\n    };\n\n    _this.getCurrentDate = function () {\n      var date = new Date().getDate();\n      var month = new Date().getMonth() + 1;\n      var year = new Date().getFullYear();\n      return year + '/' + month + '/' + date;\n    };\n\n    _this.state = {\n      taskText: \"\",\n      id: \"\",\n      createdAt: \"\"\n    };\n    return _this;\n  }\n\n  _createClass(ToDo, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var route = this.props.route;\n      var item = route.params.item;\n      var name = item.name;\n      return React.createElement(View, {\n        style: styles.container,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 5\n        }\n      }, React.createElement(Text, {\n        style: styles.text,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 7\n        }\n      }, \"To-Do List\"), React.createElement(View, {\n        style: styles.container2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 7\n        }\n      }, React.createElement(View, {\n        style: styles.card1,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 9\n        }\n      }, React.createElement(Text, {\n        style: styles.cardText,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }\n      }, \"Add Task:\"), React.createElement(TextInput, {\n        onChangeText: function onChangeText(text) {\n          return _this2.setState({\n            taskText: text\n          });\n        },\n        style: styles.input,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }\n      })), React.createElement(TouchableOpacity, {\n        onPress: function onPress() {\n          if (_this2.state.taskText.length == 0) {\n            alert(\"you must enter a task\");\n            return;\n          }\n\n          var newKey = _this2.generateKey(24);\n\n          var newTask = {\n            \"taskText\": _this2.state.taskText,\n            \"id\": newKey,\n            \"createdAt\": _this2.getCurrentDate()\n          };\n          myData.toDo_list.push(newTask);\n        },\n        style: styles.card2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 9\n        }\n      }, React.createElement(Text, {\n        style: styles.cardText,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }\n      }, \"+\"))), React.createElement(View, {\n        style: styles.container3,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 9\n        }\n      }, React.createElement(FlatList, {\n        data: myData.toDo_list,\n        keyExtractor: function keyExtractor(item) {\n          return item.id.toString();\n        },\n        renderItem: function renderItem(_ref) {\n          var item = _ref.item;\n          return React.createElement(TouchableOpacity, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 15\n            }\n          }, React.createElement(ToDoListItem, {\n            item: item,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 17\n            }\n          }));\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }\n      })));\n    }\n  }]);\n\n  return ToDo;\n}(Component);\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: '#ebebeb'\n  },\n  container2: {\n    width: 350,\n    flexDirection: \"row\",\n    justifyContent: \"center\",\n    alignItems: 'center',\n    backgroundColor: '#ebebeb'\n  },\n  container3: {\n    flex: 1,\n    justifyContent: \"flex-start\",\n    alignItems: 'center',\n    backgroundColor: '#ebebeb'\n  },\n  text: {\n    color: 'black',\n    fontSize: 24,\n    fontWeight: 'bold',\n    marginTop: 15,\n    textDecorationLine: \"underline\",\n    flexWrap: 'wrap'\n  },\n  card1: {\n    flex: 1,\n    height: 75,\n    justifyContent: \"center\",\n    borderRadius: 10,\n    backgroundColor: 'black',\n    marginRight: 5,\n    marginVertical: 5,\n    padding: 10,\n    alignItems: 'center'\n  },\n  card2: {\n    height: 75,\n    justifyContent: \"center\",\n    borderRadius: 10,\n    backgroundColor: 'green',\n    marginLeft: 5,\n    marginVertical: 5,\n    padding: 10,\n    alignItems: 'center'\n  },\n  cardText: {\n    fontSize: 18,\n    color: 'white',\n    marginBottom: 5,\n    flexShrink: 1,\n    flexWrap: 'wrap',\n    fontWeight: \"bold\"\n  },\n  listRow: {\n    flex: 1,\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    margin: 10,\n    width: 350,\n    backgroundColor: \"skyblue\",\n    borderWidth: 1,\n    borderRadius: 10,\n    borderColor: \"black\"\n  },\n  input: {\n    alignSelf: \"stretch\",\n    borderColor: 'white',\n    borderWidth: 1,\n    padding: 5,\n    color: 'white'\n  }\n});\nexport default ToDo;","map":{"version":3,"sources":["/Users/scottkerkove/Desktop/Apolis/React/NavDemo/src/screens/ToDo.js"],"names":["React","Component","useState","myData","ToDoListItem","styles","listRow","flex","fontWeight","marginLeft","props","item","taskText","flexShrink","flexWrap","margin","fontSize","createdAt","ToDo","generateKey","numberOfCharacters","require","length","getCurrentDate","date","Date","getDate","month","getMonth","year","getFullYear","state","id","route","params","name","container","text","container2","card1","cardText","setState","input","alert","newKey","newTask","toDo_list","push","card2","container3","toString","StyleSheet","create","justifyContent","alignItems","backgroundColor","width","flexDirection","color","marginTop","textDecorationLine","height","borderRadius","marginRight","marginVertical","padding","marginBottom","borderWidth","borderColor","alignSelf"],"mappings":"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","sourcesContent":["import React, { Component, useState } from 'react'\nimport { StyleSheet, View, Text, TouchableOpacity, FlatList, Image, TextInput } from 'react-native'\nimport myData from '../data/toDo_list.json'\n\n\n\nclass ToDoListItem extends Component {\n  \n\n  render() {\n    return (\n      <View style = {styles.listRow} >\n      <View style = {{flex:1}}>\n        <Text  style = {{fontWeight: 'bold', marginLeft: 5}}>{this.props.item.taskText}</Text>\n        <Text style = {{flexShrink: 1, flexWrap: 'wrap', margin:5, fontSize:10}}>{this.props.item.createdAt}</Text>\n      </View>\n      </View>\n    )\n  }\n}\n\n\nclass ToDo extends Component {\n  \n  constructor(props) {\n    super(props);\n    this.state = {\n      taskText: \"\",\n      id:\"\",\n      createdAt: \"\"\n  \n    };\n    \n  }\n  generateKey = (numberOfCharacters) => {\n      return require('random-string')({length: numberOfCharacters});\n  }\n  getCurrentDate=()=>{\n\n    var date = new Date().getDate();\n    var month = new Date().getMonth() + 1;\n    var year = new Date().getFullYear();\n    return year + '/' + month + '/' + date; //format: dd-m-yyyy;\n}\n\n  render() {\n    const { route } = this.props\n    const { item } = route.params\n    const { name } = item\n    // const { navigate } = this.props.navigation    -> if we want to navigate to another screen\n\n  return (\n    <View style={styles.container}>\n      <Text style={styles.text}>To-Do List</Text>\n      <View style={styles.container2}>\n        <View style={styles.card1}>\n          <Text style={styles.cardText}>Add Task:</Text>\n          <TextInput \n          onChangeText={(text) => this.setState({ taskText: text }) } \n        \n          style={styles.input} />\n        </View>\n        <TouchableOpacity \n        onPress={() => {\n            if (this.state.taskText.length == 0){\n                alert(\"you must enter a task\")\n                return\n            }\n            const newKey = this.generateKey(24)\n            const newTask = {\n                \"taskText\": this.state.taskText,\n                \"id\": newKey,\n                \"createdAt\": this.getCurrentDate()\n            };\n            myData.toDo_list.push(newTask) //pull to refresh results\n            \n        }}\n        style={styles.card2}>\n          <Text style={styles.cardText}>+</Text>\n        </TouchableOpacity>\n        </View>\n        <View style={styles.container3}>\n          <FlatList\n            data={myData.toDo_list} \n            keyExtractor = { (item) => item.id.toString() }\n            renderItem={({ item }) => {\n            return (\n              <TouchableOpacity>\n                <ToDoListItem item = {item}>\n                </ToDoListItem>\n              </TouchableOpacity>\n            )\n            }}\n          />\n        </View>\n    </View>\n  )\n}\n\n\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: '#ebebeb'\n  },\n  container2: {\n    width: 350,\n    flexDirection: \"row\",\n    justifyContent: \"center\",\n    alignItems: 'center',\n    backgroundColor: '#ebebeb'\n  },\n  container3: {\n    flex: 1,\n    justifyContent: \"flex-start\",\n    alignItems: 'center',\n    backgroundColor: '#ebebeb'\n  },\n  text: {\n    color: 'black',\n    fontSize: 24,\n    fontWeight: 'bold',\n    marginTop: 15,\n    textDecorationLine: \"underline\",\n    flexWrap: 'wrap'\n  },\n  card1: {\n    flex: 1,\n    height: 75,\n    justifyContent: \"center\",\n    borderRadius: 10,\n    backgroundColor: 'black',\n    marginRight: 5,\n    marginVertical: 5,\n    padding: 10,\n    alignItems: 'center'\n  },\n  card2: {\n    // width: 350,\n    height: 75,\n    justifyContent: \"center\",\n    borderRadius: 10,\n    backgroundColor: 'green',\n    marginLeft: 5,\n    marginVertical: 5,\n    padding: 10,\n    alignItems: 'center'\n  },\n  \n  cardText: {\n    fontSize: 18,\n    color: 'white',\n    marginBottom: 5,\n    flexShrink: 1,\n    flexWrap: 'wrap',\n    fontWeight: \"bold\",\n  },\n  listRow: {\n    flex: 1,\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    margin: 10,\n    width: 350,\n    backgroundColor: \"skyblue\",\n    borderWidth: 1,\n    borderRadius: 10,\n    borderColor: \"black\"\n  },\n  input: {\n      alignSelf: \"stretch\",\n      borderColor: 'white',\n      borderWidth: 1,\n      padding: 5,\n      color: 'white'\n    \n  }\n\n})\n\nexport default ToDo\n\n"]},"metadata":{},"sourceType":"module"}