{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/Users/scottkerkove/Desktop/Apolis/React/NavDemo/App.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function () { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport StackNavigator from \"./src/navigation/StackNavigator\";\nimport SplashScreen from \"./src/screens/SplashScreen\";\n\nvar App = function (_React$Component) {\n  _inherits(App, _React$Component);\n\n  var _super = _createSuper(App);\n\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _super.call(this, props);\n\n    _this.performTimeConsumingTask = function _callee() {\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              return _context.abrupt(\"return\", new Promise(function (resolve) {\n                return setTimeout(function () {\n                  resolve('result');\n                }, 2000);\n              }));\n\n            case 1:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    _this.state = {\n      isLoaing: true\n    };\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var data;\n      return _regeneratorRuntime.async(function componentDidMount$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.next = 2;\n              return _regeneratorRuntime.awrap(this.performTimeConsumingTask());\n\n            case 2:\n              data = _context2.sent;\n\n              if (data !== null) {\n                this.setState({\n                  isLoading: false\n                });\n              }\n\n            case 4:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, this, null, Promise);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      if (this.state.isLoaing) {\n        return React.createElement(SplashScreen, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 14\n          }\n        });\n      }\n\n      return React.createElement(StackNavigator, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 10\n        }\n      });\n    }\n  }]);\n\n  return App;\n}(React.Component);\n\nexport { App as default };","map":{"version":3,"sources":["/Users/scottkerkove/Desktop/Apolis/React/NavDemo/App.js"],"names":["React","StackNavigator","SplashScreen","App","props","performTimeConsumingTask","Promise","resolve","setTimeout","state","isLoaing","data","setState","isLoading","Component"],"mappings":";;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,cAAP;AACA,OAAOC,YAAP;;IAIqBC,G;;;;;AAEnB,eAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,8BAAMA,KAAN;;AADiB,UASrBC,wBATqB,GASM;AAAA;AAAA;AAAA;AAAA;AAAA,+CAClB,IAAIC,OAAJ,CAAY,UAACC,OAAD;AAAA,uBACjBC,UAAU,CACR,YAAM;AAAED,kBAAAA,OAAO,CAAC,QAAD,CAAP;AAAmB,iBADnB,EAER,IAFQ,CADO;AAAA,eAAZ,CADkB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KATN;;AAEjB,UAAKE,KAAL,GAAa;AAETC,MAAAA,QAAQ,EAAE;AAFD,KAAb;AAFiB;AAOpB;;;;;;;;;;;+CAcoB,KAAKL,wBAAL,E;;;AAAbM,cAAAA,I;;AAEN,kBAAIA,IAAI,KAAK,IAAb,EAAmB;AACjB,qBAAKC,QAAL,CAAc;AAAEC,kBAAAA,SAAS,EAAE;AAAb,iBAAd;AACD;;;;;;;;;;;6BAEQ;AACP,UAAI,KAAKJ,KAAL,CAAWC,QAAf,EAAyB;AACvB,eAAO,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACD;;AAEH,aAAO,oBAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACD;;;;EAnCgCV,KAAK,CAACc,S;;SAAlBX,G","sourcesContent":["import React from 'react'\nimport StackNavigator from './src/navigation/StackNavigator'\nimport SplashScreen from './src/screens/SplashScreen'\n// import { SplashScreen } from 'expo';\n\n\nexport default class App extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n\n        isLoaing: true,\n    }\n    \n}\n\nperformTimeConsumingTask = async() => {\n  return new Promise((resolve) =>\n    setTimeout(\n      () => { resolve('result') },\n      2000\n    )\n  );\n}\n\nasync componentDidMount() {\n  // Preload data from an external API\n  // Preload data using AsyncStorage\n  const data = await this.performTimeConsumingTask();\n\n  if (data !== null) {\n    this.setState({ isLoading: false });\n  }\n}\n  render() {\n    if (this.state.isLoaing) {\n      return <SplashScreen />;\n    }\n  \n  return <StackNavigator />\n}\n}"]},"metadata":{},"sourceType":"module"}